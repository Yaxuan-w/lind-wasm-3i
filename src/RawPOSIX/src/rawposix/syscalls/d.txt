pub fn open_syscall(cageid: u64, path: u64, oflag: u64, mode: u64, unused1: u64, unused2: u64) -> i32;
pub fn mkdir_syscall(cageid: u64, path: u64, mode: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn mknod_syscall(cageid: u64, path: u64, mode: u64, dev: u64, unused1: u64, unused2: u64) -> i32;
pub fn link_syscall(cageid: u64, oldpath: u64, newpath: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn unlink_syscall(cageid: u64, path: u64, unused1: u64, unused2: u64, unused3: u64, unused4: u64) -> i32;
pub fn creat_syscall(cageid: u64, path: u64, mode: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn stat_syscall(cageid: u64, path: u64, statbuf: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn fstat_syscall(cageid: u64, virtual_fd: u64, statbuf: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn statfs_syscall(cageid: u64, path: u64, statbuf: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn fstatfs_syscall(cageid: u64, virtual_fd: u64, statbuf: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn read_syscall(cageid: u64, virtual_fd: u64, readbuf: u64, count: u64, unused1: u64, unused2: u64) -> i32;
pub fn pread_syscall(cageid: u64, virtual_fd: u64, buf: u64, count: u64, offset: u64, unused1: u64) -> i32;
pub fn readlink_syscall(cageid: u64, path: u64, buf: u64, buflen: u64, unused1: u64, unused2: u64) -> i32;
pub fn readlinkat_syscall(cageid: u64, virtual_fd: u64, path: u64, buf: u64, buflen: u64, unused1: u64) -> i32;
pub fn write_syscall(cageid: u64, virtual_fd: u64, buf: u64, count: u64, unused1: u64, unused2: u64) -> i32;
pub fn pwrite_syscall(cageid: u64, virtual_fd: u64, buf: u64, count: u64, offset: u64, unused1: u64) -> i32;
pub fn writev_syscall(cageid: u64, virtual_fd: u64, iovec: u64, iovcnt: u64, unused1: u64, unused2: u64) -> i32;
pub fn lseek_syscall(cageid: u64, virtual_fd: u64, offset: u64, whence: u64, unused1: u64, unused2: u64) -> i32;
pub fn access_syscall(cageid: u64, path: u64, amode: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn chdir_syscall(cageid: u64, path: u64, unused1: u64, unused2: u64, unused3: u64, unused4: u64) -> i32;
pub fn dup_syscall(cageid: u64, virtual_fd: u64, start_desc: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn dup2_syscall(cageid: u64, old_virtualfd: u64, new_virtualfd: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn close_syscall(cageid: u64, virtual_fd: u64, unused1: u64, unused2: u64, unused3: u64, unused4: u64) -> i32;
pub fn fcntl_syscall(cageid: u64, virtual_fd: u64, cmd: u64, arg: u64, unused1: u64, unused2: u64) -> i32;
pub fn ioctl_syscall(cageid: u64, virtual_fd: u64, request: u64, ptrunion: u64, unused1: u64, unused2: u64) -> i32;
pub fn mmap_syscall(cageid: u64, addr: u64, len: u64, prot: u64, flags: u64, virtual_fd: u64) -> usize;
pub fn munmap_syscall(cageid: u64, addr: u64, len: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn flock_syscall(cageid: u64, virtual_fd: u64, operation: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn rename_syscall(cageid: u64, oldpath: u64, newpath: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn fsync_syscall(cageid: u64, virtual_fd: u64, unused1: u64, unused2: u64, unused3: u64, unused4: u64) -> i32;
pub fn truncate_syscall(cageid: u64, path: u64, length: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn pipe_syscall(cageid: u64, pipefd: u64, unused1: u64, unused2: u64, unused3: u64, unused4: u64) -> i32;
pub fn getdents_syscall(cageid: u64, virtual_fd: u64, buf: u64, nbytes: u64, unused1: u64, unused2: u64) -> i32;
pub fn getcwd_syscall(cageid: u64, buf: u64, bufsize: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
pub fn shmget_syscall(cageid: u64, key: u64, size: u64, shmflg: u64, unused1: u64, unused2: u64) -> i32;
pub fn shmat_syscall(cageid: u64, shmid: u64, shmaddr: u64, shmflg: u64, unused1: u64, unused2: u64) -> i32;
pub fn shmdt_syscall(cageid: u64, shmaddr: u64, unused1: u64, unused2: u64, unused3: u64, unused4: u64) -> i32;
pub fn futex_syscall(cageid: u64, uaddr: u64, futex_op: u64, val: u64, val2: u64, uaddr2: u64) -> i32;
pub fn clock_gettime_syscall(cageid: u64, clockid: u64, tp: u64, unused1: u64, unused2: u64, unused3: u64) -> i32;
